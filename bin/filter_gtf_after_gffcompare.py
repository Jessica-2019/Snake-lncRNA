#!/usr/bin/env python
import argparse 
import sys
import re
parser = argparse.ArgumentParser(description="Filter the isoforms by the class_code(u,i,x), exon numbers(1) and length(200).\n Use this script after cufflinks/stringtie as a subsitution for next analysis\n Author: Ran Zhou	Mail: Ranzhou1005@gmail.com",formatter_class= argparse.RawTextHelpFormatter)
parser.add_argument("-g","--gtf", action="store", dest="gtf",type=str, required=True, 
                    help="GTF file generated by cufflinks/stringtie ")
parser.add_argument("-o","--out", action="store",type = str, dest="out", default='filter.gtf',\
                    help="the name of the output file")
parser.add_argument("-s","--single", action="store_true", dest="single", default=False,\
                     help="plant: yes\tanimal: No")
argvs = parser.parse_args()
if argvs.single:
	exon_filter = 1
else:
	exon_filter = 0
length_filter = 200

class_pool = ['u','i','x']
class_co = re.compile(r'class_code "(.*?)"')
filein = sys.argv[1]
tmp = ''
with open(argvs.gtf) as IN, open(argvs.out,'w') as OUT:
	for i in IN.readlines():
		if i.startswith('#'): 
			OUT.write(i)
			continue
		ALL = i.strip().split('\t')
		if ALL[2] == 'transcript':
			if len(tmp) == 0:
				tmp = [i]
				CC = re.findall(class_co,ALL[-1])[0]
				exon = 0
			else:
				if len(tmp) > exon_filter+1 and CC in class_pool:
					OUT.write(''.join(tmp))
					tmp = [i]
					CC = re.findall(class_co,ALL[-1])[0]
					exon = 0
				else:
					tmp = [i]
					CC = re.findall(class_co,ALL[-1])[0]
					exon = 0
		else:
			tmp.append(i)
			exon += int(int(ALL[4]) - int(ALL[3]))
	if len(tmp) > exon_filter+1 and CC in class_pool:
		OUT.write(''.join(tmp))
